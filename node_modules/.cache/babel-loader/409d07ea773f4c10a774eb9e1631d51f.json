{"ast":null,"code":"var _jsxFileName = \"/home/chad/Desktop/react-projects/movie-app/src/components/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport { useState, useEffect, useRef } from 'react';\nimport Fetch from './Fetch';\nimport List from './List';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchForm() {\n  _s();\n\n  const uri = 'https://api.themoviedb.org/3/search/movie?language=en-US&page=1&include_adult=true';\n  const [input, setInput] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    setShowSuggestions(false);\n    const delay = setTimeout(() => {\n      setShowSuggestions(true);\n    }, 1000);\n    return () => clearTimeout(delay);\n  }, [input]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const renderMovie = movie => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      onClick: () => setShowSuggestions(false),\n      to: `/movie/${movie.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-suggestion row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto border p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w92${movie.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col pt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderResults = data => {\n    if (input.trim() === '') return;\n    const movies = data.results.splice(0, 5);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-suggestions\",\n      style: {\n        position: 'absolute',\n        top: '50px',\n        left: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        items: movies,\n        renderItem: renderMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    inline: true,\n    className: \"search-form d-flex w-100\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"w-100\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(Fetch, {\n      uri: uri + `&query=${input}`,\n      renderSuccess: renderResults,\n      loadingFallback: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchForm, \"z6TapeanPZVDMuv5H+n2LRiRzo0=\");\n\n_c = SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/home/chad/Desktop/react-projects/movie-app/src/components/SearchForm.js"],"names":["Form","FormControl","Button","FaSearch","useState","useEffect","useRef","Fetch","List","Link","SearchForm","uri","input","setInput","showSuggestions","setShowSuggestions","firstUpdate","current","delay","setTimeout","clearTimeout","handleSubmit","e","preventDefault","renderMovie","movie","id","poster_path","title","release_date","renderResults","data","trim","movies","results","splice","position","top","left","target","value"],"mappings":"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","sourcesContent":["import { Form, FormControl, Button } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport { useState, useEffect, useRef } from 'react';\nimport Fetch from './Fetch';\nimport List from './List';\nimport { Link } from 'react-router-dom';\n\nexport default function SearchForm() {\n    \n    const uri = 'https://api.themoviedb.org/3/search/movie?language=en-US&page=1&include_adult=true';\n    const [input, setInput] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const firstUpdate = useRef(true);\n\n    useEffect(() => {\n        if(firstUpdate.current){\n            firstUpdate.current = false;\n            return;\n        }\n\n        setShowSuggestions(false);\n        const delay = setTimeout(() => {\n            setShowSuggestions(true)\n        }, 1000)\n\n        return () => clearTimeout(delay);\n    }, [input]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    const renderMovie = (movie) => {\n        return (\n            <Link onClick={() => setShowSuggestions(false)} to={`/movie/${movie.id}`} >\n                <div className='movie-suggestion row'>\n                    <div className='col-auto border p-0'>\n                        <img src={`https://image.tmdb.org/t/p/w92${movie.poster_path}`} />\n                    </div>\n                    <div className='col pt-3'>\n                        <h5>{movie.title}</h5>\n                        <p>{movie.release_date}</p>\n                    </div>\n                </div>\n            </Link>\n        );\n    }\n\n    const renderResults = (data) => {\n        if(input.trim() === '') return;\n        const movies = data.results.splice(0,5);\n        \n        return (\n            <div className='movie-suggestions' style={{position: 'absolute', top: '50px', left: '0'}}>\n                <List \n                    items={movies}\n                    renderItem={renderMovie}\n                />\n            </div>\n        )\n    }\n    \n\n    return (\n        <Form \n            inline \n            className=\"search-form d-flex w-100\"\n            style={{position: 'relative'}}>\n            <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"w-100\"\n                value={input}\n                onChange={e => setInput(e.target.value)}\n                required\n            />\n            <Button type=\"submit\" onClick={handleSubmit}>\n                <FaSearch />\n            </Button>\n            {showSuggestions && (\n                <Fetch \n                    uri={uri + `&query=${input}`}\n                    renderSuccess={renderResults}\n                    loadingFallback={null}\n                />\n            )}\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}