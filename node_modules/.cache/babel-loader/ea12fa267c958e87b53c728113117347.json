{"ast":null,"code":"var _jsxFileName = \"/home/chad/Desktop/react-projects/movie-app/src/components/CardCarousel.js\";\nimport { createRef } from 'react';\nimport { GrNext, GrPrevious } from 'react-icons/gr';\nimport { FcNext } from 'react-icons/fc';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardCarousel({\n  renderCard,\n  data\n}) {\n  const scrolledDiv = /*#__PURE__*/createRef();\n  const cardRefs = [];\n  var scrollPos = 0;\n\n  const makeScroll = up => {\n    if (up) scrollPos = scrollPos + 4 > cardRefs.length - 1 ? cardRefs.length - 1 : scrollPos + 4;else scrollPos = scrollPos - 4 < 0 ? 0 : scrollPos - 4;\n    if (scrollPos !== cardRefs.length - 1) console.log(\"Don't show butotn\");\n    cardRefs[scrollPos].current.scrollIntoView({\n      behavior: 'smooth',\n      alignTo: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-buttons d-flex justify-content-between\",\n      style: {\n        position: 'relative',\n        zIndex: '1'\n      },\n      children: [\"   \", scrollPos !== cardRefs.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          zIndex: '1',\n          position: 'absolute',\n          top: '200px',\n          right: '-10px'\n        },\n        onClick: () => {\n          makeScroll(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          zIndex: '1',\n          position: 'absolute',\n          top: '200px',\n          left: '-10px'\n        },\n        onClick: () => {\n          makeScroll(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(IoIosArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: scrolledDiv,\n      className: \"carousel\",\n      style: {\n        display: 'flex',\n        minWidth: 'fit-content',\n        overflow: 'hidden',\n        listStyle: 'none'\n      },\n      children: data.map((card, i) => {\n        const ref = /*#__PURE__*/createRef();\n        cardRefs.push(ref);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: ref,\n          children: renderCard(card)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = CardCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCarousel\");","map":{"version":3,"sources":["/home/chad/Desktop/react-projects/movie-app/src/components/CardCarousel.js"],"names":["createRef","GrNext","GrPrevious","FcNext","IoIosArrowForward","IoIosArrowBack","Button","CardCarousel","renderCard","data","scrolledDiv","cardRefs","scrollPos","makeScroll","up","length","console","log","current","scrollIntoView","behavior","alignTo","position","zIndex","top","right","left","display","minWidth","overflow","listStyle","map","card","i","ref","push"],"mappings":"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","sourcesContent":["import { createRef } from 'react';\nimport { GrNext, GrPrevious } from 'react-icons/gr';\nimport { FcNext } from 'react-icons/fc';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\nimport { Button } from 'react-bootstrap';\n\nexport default function CardCarousel ({ renderCard, data }) {\n    \n    const scrolledDiv = createRef();\n    const cardRefs = [];\n    var scrollPos = 0;\n\n    const makeScroll = (up) => {\n        if(up) \n            scrollPos = scrollPos + 4 > cardRefs.length-1 ? cardRefs.length-1 : scrollPos + 4;\n        else \n            scrollPos = scrollPos - 4 < 0 ? 0 : scrollPos - 4;\n\n        if(scrollPos !== (cardRefs.length-1)) console.log(\"Don't show butotn\");\n        cardRefs[scrollPos].current.scrollIntoView({behavior: 'smooth', alignTo: false});\n    }\n\n    return (\n        <div className=\"card-carousel-container\">       \n            <div\n                className='control-buttons d-flex justify-content-between'\n                style={{position: 'relative', zIndex: '1'}}\n            >   {scrollPos !== (cardRefs.length-1) &&\n                    <button\n                        style={{zIndex: '1', position: 'absolute', top: '200px', right: '-10px'}}\n                        onClick={() => {\n                            makeScroll(true);                       \n                        }}\n                    >\n                        <IoIosArrowForward />\n                    </button> \n                }\n                <button\n                    style={{zIndex: '1', position: 'absolute', top: '200px', left: '-10px'}}\n                    onClick={() => {\n                        makeScroll(false); \n                    }}\n                >\n                    <IoIosArrowBack />\n                </button>                             \n            </div>\n                    \n            <ul \n                ref={scrolledDiv} \n                className=\"carousel\"\n                style={{display: 'flex', minWidth: 'fit-content', overflow: 'hidden', listStyle: 'none'}}>\n                    {data.map((card , i) => {\n                        const ref = createRef();\n                        cardRefs.push(ref);\n                        return (\n                        <li key={i} ref={ref}>\n                            {renderCard(card)}           \n                        </li>);\n                    })}\n            </ul>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}