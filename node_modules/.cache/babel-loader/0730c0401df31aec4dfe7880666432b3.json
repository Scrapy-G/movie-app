{"ast":null,"code":"var _jsxFileName = \"/home/chad/Desktop/react-projects/movie-app/src/components/FanFavorite.js\";\nimport { Card, Button, Container } from 'react-bootstrap';\nimport Fetch from './Fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FanFavorite() {\n  const uri = 'https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=1';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fan favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Fetch, {\n        renderSuccess: renderCards,\n        uri: uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n\n  function renderCards(data) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: data.results.map((movie, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: `https://image.tmdb.org/t/p/w185${movie.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Card Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Movie description or something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Watchlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  const card = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Movie description or something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  };\n}\n_c = FanFavorite;\n\nvar _c;\n\n$RefreshReg$(_c, \"FanFavorite\");","map":{"version":3,"sources":["/home/chad/Desktop/react-projects/movie-app/src/components/FanFavorite.js"],"names":["Card","Button","Container","Fetch","FanFavorite","uri","renderCards","data","results","map","movie","i","width","poster_path","card"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,WAAT,GAAwB;AAEnC,QAAMC,GAAG,GAAG,oEAAZ;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,6BACI,QAAC,KAAD;AACI,QAAA,aAAa,EAAEC,WADnB;AAEI,QAAA,GAAG,EAAED;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAYA,WAASC,WAAT,CAAsBC,IAAtB,EAA4B;AACxB,wBACI,QAAC,SAAD;AAAA,gBACKA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAASC,CAAT,KAAe;AAC7B,4BACI,QAAC,IAAD;AAAc,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAArB;AAAA,kCACI,QAAC,IAAD,CAAM,GAAN;AACI,YAAA,GAAG,EAAG,kCAAiCF,KAAK,CAACG,WAAY;AAD7D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eASI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAAWF,CAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OAdA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAED,QAAMG,IAAI,GAAG,MAAM;AACf,wBACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAbD;AAcH;KApDuBR,W","sourcesContent":["import { Card, Button, Container } from 'react-bootstrap';\nimport Fetch from './Fetch';\n\nexport default function FanFavorite () {\n\n    const uri = 'https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=1';\n\n    return (\n        <div>\n            <h1>Fan favorites</h1>\n            <Container>\n                <Fetch \n                    renderSuccess={renderCards}\n                    uri={uri}\n                />\n            </Container>\n        </div>\n    )\n\n    function renderCards (data) {\n        return (\n            <Container>\n                {data.results.map((movie , i) => {\n                    return (\n                        <Card key={i} style={{width: '200px'}}>\n                            <Card.Img \n                                src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>Card Title</Card.Title>\n                                <Card.Text>\n                                    Movie description or something\n                                </Card.Text>\n                            </Card.Body>\n                            <Button>Watchlist</Button>\n                        </Card> \n                    );           \n                })}\n            </Container>\n        );\n    }\n\n    const card = () => {\n        return (\n            <Card style={{width: '200px'}}>\n                <Card.Img />\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n                    <Card.Text>\n                        Movie description or something\n                    </Card.Text>\n                </Card.Body>\n                <Button>Watchlist</Button>\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}